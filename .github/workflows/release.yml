name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  TF_VAR_docker_image_api: ${{ secrets.GAR_DOCKER_REGISTRY }}/api:${{ github.run_number }}
  DOCKER_IMAGE_INT: ${{ secrets.GAR_DOCKER_REGISTRY }}/api:int

jobs:
  build-notarize-dmg:
    runs-on: [ self-hosted, mac, java, signing ]
    name: Build and Notarize dmg

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clean
        run: ./gradlew clean

      - name: Build dmg
        run: |
          ./gradlew app:packageDmg app:notarizeDmg \
              -PsigningKeychain=${{ secrets.SIGNING_KEYCHAIN }} \
              -PnotarizationAppleId=${{ secrets.NOTARIZATION_APPLE_ID }} \
              -PnotarizationPassword=${{ secrets.NOTARIZATION_PASSWORD }}

      - name: Upload Artifacts
        run: |
          echo "Build Id Suffix $BUILD_ID_SUFFIX" && \
          ./gradlew :release:run \
            --args="\
              -dmgFile $PWD/app/build/compose/binaries/main/dmg/CheckItIn.dmg \
              -par $PAR \
              -buildNumber $GITHUB_RUN_NUMBER$BUILD_ID_SUFFIX\
            "
        env:
          PAR: ${{ secrets.ORACLE_RELEASE_PAR_INTERNAL }}

  build-push-server:
    runs-on: [ self-hosted, medium ]
    name: Build and Push Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Server
        run: docker build . -f ./server/docker/ServerApi.Dockerfile -t "$TF_VAR_docker_image_api" --platform linux/amd64

      - name: Login to GAR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.GAR_DOCKER_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT }}

      - name: Push Docker Image
        run: |
          docker tag "$TF_VAR_docker_image_api" "$DOCKER_IMAGE_INT"
          docker push "$DOCKER_IMAGE_INT"
          docker push "$TF_VAR_docker_image_api"

  terraform-apply:
    name: Terraform Apply
    runs-on: [ self-hosted, small ]
    needs: [ build-push-server, build-notarize-dmg ]

    env:
      TF_VAR_is_prod: false
      TF_VAR_pusher_id: ${{ secrets.PUSHER_ID }}
      TF_VAR_pusher_key: ${{ secrets.PUSHER_KEY }}
      TF_VAR_pusher_secret: ${{ secrets.PUSHER_SECRET }}
      TF_VAR_pusher_cluster: ${{ secrets.PUSHER_CLUSTER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Save GCP Credentials
        working-directory: server/terraform
        run: |
          mkdir -p build
          echo "$GCP_KEY" > build/gcp-credentials.json
        env:
          GCP_KEY: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT }}

      - name: terraform init
        working-directory: server/terraform
        run: terraform init

      - name: Choose Workspace
        working-directory: server/terraform
        run: terraform workspace select int || terraform workspace new int

      - name: Terraform Apply - Migration Mode
        working-directory: server/terraform
        run: |
          terraform apply -auto-approve -lock-timeout 15m
        env:
          TF_VAR_is_migrating: true

      - name: Wait for Migration Result
        run: |
          export BASE_API_URL="$(cat server/terraform/build/base_api_url.txt)"
          echo "$BASE_API_URL"
          ./gradlew :release-wait-for-migrations:run
        timeout-minutes: 180 # 3 hours

      - name: Terraform Apply - Standard Mode
        working-directory: server/terraform
        run: terraform apply -auto-approve -lock-timeout 15m
        env:
          TF_VAR_is_migrating: false

#  build-windows:
#    runs-on: [ self-hosted, java ]
#    name: Build Windows
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#        with:
#          ref: ${{ github.head_ref }}
#
#      - name: Build msi
#        run: ./gradlew clean app:packageMsi -PbuildProduction

  release:
    needs: [ terraform-apply ]
    runs-on: [ self-hosted, java ]
    name: Release

    steps:
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: '${{ job.status }}' === 'success' ? 'New Check-It-In app successfully built - Build #${{ github.run_number }} - <${{ secrets.RELEASE_URL_INTERNAL }}|Download Here>' : 'Check-It-In app failed to build.',
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
